A database of packages that need porting to Python 3, and tools to manage it.


# Installation

This software is still in the initial phases of development, so it is not
yet packaged. Install it directly from Git working directory:

    $ python3 -m pip install --user -e.


# Usage

First, you will need to load a database.

    $ python3 -m portingdb --datadir data/ load

This will create a `portingdb.sqlite` file in the current directory.
Currently, the database needs re-loaded every time the data changes.
(If the schema changes, you will need to delete the `portingdb.sqlite` file
before re-loading data.)

To check the database, do:

    $ python3 -m portingdb status

To start a HTML report server, start:

    $ python3 -m portingdb serve

# Check drops

There is a script that checks what python2 packages can be dropped from Fedora
during the [Mass Python 2 Package Removal](https://fedoraproject.org/wiki/Changes/Mass_Python_2_Package_Removal).

Run it with:

    $ python3 -m portingdb check-drops

See the docstring of [portingdb/check_drops.py](./portingdb/check_drops.py)
for more info.

# Sample

A sample HTML report server is located at:

    http://fedora.portingdb.xyz/

# Deployment

Configuration for OpenShift deployment is included in the repository.
As configured, the app will need a Redis server for caching, which can be
added using:
    $ rhc cartridge add "http://cartreflect-claytondev.rhcloud.com/reflect?github=smarterclayton/openshift-redis-cart"
Otherwise it's a standard OpenShift app.
Hot deployment is configured, so the app will continue working while
being deployed. But if the database schema changes between
deployments, the DB file needs to be removed before deploy.


# Contribute

Contributing guide of sorts: http://synfo.github.io/2015/10/14/Python3-Porting-Database/

- Issue Tracker: https://github.com/fedora-python/portingdb/issues
- Source Code: https://github.com/fedora-python/portingdb


# License

This code is under the MIT license. May it serve you well.
